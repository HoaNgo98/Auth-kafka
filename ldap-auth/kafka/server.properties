broker.id=1
listeners=SASL_PLAINTEXT://:9091
advertised.listeners=SASL_PLAINTEXT://192.168.101.131:9091
log.dirs=/var/lib/kafka
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2
zookeeper.connect=192.168.101.131:2181,192.168.101.132:2181,192.168.101.133:2181

inter.broker.listener.name=SASL_PLAINTEXT 
sasl.mechanism.inter.broker.protocol=PLAIN

# SASL Configuration
listener.name.sasl_plaintext.sasl.enabled.mechanisms=PLAIN
listener.name.sasl_plaintext.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="kafka" password="kafka";

listener.name.sasl_plaintext.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler

# LDAP authentication
ldap.java.naming.provider.url=ldap://ldap:389
ldap.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
# Authenticate to LDAP
ldap.java.naming.security.principal=cn=admin,dc=confluent,dc=io
ldap.java.naming.security.credentials=admin
ldap.java.naming.security.authentication=SIMPLE
# Locate users
ldap.user.search.base=ou=users,dc=confluent,dc=io
ldap.user.name.attribute=uid
ldap.user.object.class=inetOrgPerson

confluent.support.metrics.enable=false
confluent.license.topic.replication.factor=1

#=============================================================================================================================
# Activate the plugin
authorizer.class.name=io.confluent.kafka.security.ldap.authorizer.LdapAuthorizer
# Set the Kafka broker as a super user
super.users=User:kafka

# Provide the LDAP provider URL
ldap.authorizer.java.naming.provider.url=ldap://ldap:389/dc=confluent,dc=io

# Specify the LDAP security authentication protocol
ldap.authorizer.java.naming.security.authentication=SIMPLE

# Identify the principal for the LDAP context
ldap.authorizer.java.naming.security.principal=cn=admin,dc=confluent,dc=io
ldap.authorizer.java.naming.security.credentials=admin

# Specify the search base for group-based search
ldap.authorizer.group.search.base=ou=groups

# Specify the object class for groups
ldap.authorizer.group.object.class=groupOfNames

# Specify the attribute name from which the group name used in ACLs is obtained
ldap.authorizer.group.name.attribute=cn

# Specify the regex pattern to obtain the group name used in ACLs from the attribute ldap.authorizer.group.name.attribute
ldap.authorizer.group.name.attribute.pattern=(Kafka.*)

# Specify the attribute name from which group members (user principals) are obtained
ldap.authorizer.group.member.attribute=member

# Specify the regex pattern to obtain the user principal from the group member attribute
ldap.authorizer.group.member.attribute.pattern=cn=(.*),ou=People,dc=confluent,dc=io
#=============================================================================================================================

